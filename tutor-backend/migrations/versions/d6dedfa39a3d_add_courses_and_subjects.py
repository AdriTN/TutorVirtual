"""add courses and subjects

Revision ID: d6dedfa39a3d
Revises: dfb73c4f1837
Create Date: 2025-04-17 18:27:11.855622

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd6dedfa39a3d'
down_revision: Union[str, None] = 'dfb73c4f1837'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # Create courses table
    op.create_table('courses',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('title', name='uq_courses_title')
    )

    # Create subjects table
    op.create_table('subjects',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name', name='uq_subjects_name')
    )

    # Create user_courses table
    op.create_table('user_courses',
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('course_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name='fk_user_courses_course_id', ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_user_courses_user_id', ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('user_id', 'course_id'),
        sa.UniqueConstraint('user_id', 'course_id', name='uq_user_course')
    )

    # Note: The original migration had operations to drop 'subjects_course_id_fkey'
    # and 'course_id' column from 'subjects'. This implies 'subjects' might have
    # had a direct foreign key to 'courses'. The new structure here does not include
    # this direct FK on 'subjects' table itself, rather relying on association tables
    # if needed, or a different design. If that FK is still desired, it should be added here.
    # For now, we are creating 'subjects' without a 'course_id' FK.

    # The original migration also had changes like:
    # op.add_column('courses', sa.Column('title', sa.String(length=255), nullable=False))
    # op.drop_constraint('courses_name_key', 'courses', type_='unique')
    # op.create_unique_constraint(None, 'courses', ['title'])
    # op.drop_column('courses', 'name')
    # These are now handled by creating the 'courses' table with the 'title' column directly.

    # op.add_column('subjects', sa.Column('description', sa.Text(), nullable=True))
    # op.alter_column('subjects', 'name', ...)
    # op.create_unique_constraint(None, 'subjects', ['name'])
    # These are handled by creating the 'subjects' table with 'name' and 'description' directly.

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_courses')
    op.drop_table('subjects')
    op.drop_table('courses')
    # ### end Alembic commands ###
